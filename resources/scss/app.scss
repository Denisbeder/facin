@tailwind base;
@tailwind components;
@tailwind utilities;

@import 'choices';
@import 'flatpickr';

@layer base {
    :root {
        --rounded-box: .75rem;
    }

    // To Firefox
    * {
        scrollbar-width: thin;
    }

    ::-webkit-scrollbar {
        width: 6px;
        height: 6px;
        background-color: inherit;
    }
    ::-webkit-scrollbar-track {
        border-radius: 100px;
    }
    ::-webkit-scrollbar-thumb {
        border-radius: 100px;
        background-color: rgba(0, 0, 0, 0.3);
    }
    :focus-visible {
        @apply outline-slate-200;
    }

    [x-cloak] { display: none !important; }
}

@layer components {
    .card {
        overflow: unset;
    }
    .card-title + small {
        @apply text-base-content/60;
    }
    .label {
        @apply px-0;
    }
    .input, .textarea {
        &:focus {
            @apply outline-offset-0;
        }
    }
    /*.border, .border-x, .border-y, .border-b, .border-t, .border-l, .border-r, .input-bordered {
        @apply border-base-content/10;
    }*/
    input:read-only {
        @apply border-base-content/10 text-base-content/40;
    }
    .input-group {
        @apply relative;

        > *, > .input {
            border-radius: var(--rounded-btn, 0.5rem);
        }

        :where(span) {
            @apply bg-transparent absolute inset-y-0 flex items-center justify-center;
        }

        :where(span:first-child) {
            @apply left-0;
        }

        :where(span:last-child) {
            @apply right-0;
        }
    }
    .table :where(thead, tfoot) :where(th, td),
    .table-zebra tbody tr:nth-child(even) th,
    .table-zebra tbody tr:nth-child(even) td {
        --tw-bg-opacity: .35;
    }
    .topbar-actions-btn {
        .btn {
            @apply min-h-max h-10;
        }
    }
}

@layer utilities {
    .overflow {
        &-overlay {
            overflow: overlay;
        }
        &-y-overlay {
            overflow-y: overlay;
        }
        &-x-overlay {
            overflow-x: overlay;
        }
    }

    .hover\:overflow {
        :hover {
            &-overlay {
                overflow: overlay;
            }
            &-y-overlay {
                overflow-y: overlay;
            }
            &-x-overlay {
                overflow-x: overlay;
            }
        }
    }
}
